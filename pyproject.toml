[tool.poetry]
name = "selenium-pytest-jenkins-allure"
version = "0.1.0"
description = "Training for setting up a complete automation project, Using Pytest, Selenium, Jenkins and Allure"
authors = ["Viacheslav <vacheslavuslistyj@gmail.com>"]
readme = "README.md"



[tool.poetry.dependencies]
python = "^3.12"

type-validator = { path = "./submodules/type_validator", develop = true }
webdriver-actions = { path = "./submodules/wd_actions", develop = true }

pytest = "^7.4.3"
allure-pytest = "^2.13.2"
requests = "^2.31.0"
selenium = "^4.16.0"
ruff = "^0.1.8"
pre-commit = "^3.6.0"
pytest-xdist = "^3.5.0"



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.ruff]
# Exclude a variety ignored directories, mentioned in .gitignore file.
respect-gitignore = true

# Exclude files or folder
exclude = [
    # Default values
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    # Virtualenvs
    ".venv",
    "venv",
    # Folders with tests
    "test",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"



[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E", # pycodestyle
    "F", # Pyflakes
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    #    "I",  # isort
    "YTT", # flake8-2020
    "ASYNC", # flake8-async
    "S", # flake8-nandit
    "ICN", # flake8-import-conventions
    "PT", # flake8-pytest-style
    "ARG", # flake8-unused-arguments
    "PL", # Pylint
    "FLY", # flynt
    "RUF", # Ruff-specific rules
]
ignore = [
    "PLW2901",
    "S101",
    "D300",
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"



# Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]


[tool.ruff.lint.flake8-quotes]
docstring-quotes = "single"


[tool.ruff.format]
# Use single quotes for non-triple-quoted strings.
quote-style = "single"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = true
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
